<?xml version="1.0" encoding="UTF-8"?>
<import revision="$LastChangedRevision: 9299 $">		
<!-- DEFAULT SCRIPTS -->
<objects>
    <object code="most.import_sales.xls.filter-script" objectdef="vscript" module="core" >
    				<package mode="delete"/>
                    <params>
                        <value>
                            <object code="lines" module="core" objectdef="script_param"/>
                        </value>
                        <value>
                            <object code="row" module="core" objectdef="script_param"/>
                        </value>
                        <value>
                            <object code="nameToCol" module="core" objectdef="script_param"/>
                        </value>
                    </params>            
                    <script_code>    
                        <value><![CDATA[

//0 : most_sale_id
//1 : BID (CUSTOMER abbreviation)
//2 : CUSTOMER NAME
//3 : CSTID (NOT USED)
//4 : TID (NOT USED)
//5 : CFGSUBTYPE -> HARDCORE PARSE FUCK FOR PRODUCT ID
//6 : SDATE (yyyy-MM-dd)
//7 : most_order_id
//8 : QTY
//9 : SALEPRICE = Price_EUR (most_sale_total in schema - tam e BGN)
//10 : BULSTAT 
//11 : m0_price
//lines,row,nameToCol

var line = lines[row];
try 
{
	line[0].castToExactNumber();
	line[1].castToExactNumber();
	if (line[2] == "")
		return false;
	line[3].castToExactNumber();		// CSTID
	line[4].castToExactNumber();		// TID -> BOTH NOT USED BUT INTEGET
    java.date.parse("yyyy-MM-dd",line[6]);
	line[8].castToExactNumber();
	line[9].castToInexactNumber();
	line[11].castToInexactNumber();
	return true;
} catch(e) {
    java.log.warn("PROCESSING : "+line);
    java.log.warn("Filtering row "+(row+1)+" because of unsupported format!");
	return false;
}		]]></value>
     </script_code>
 </object>


    <object code="most.import_companies.xls.filter-script" objectdef="vscript" module="core" >
    				<package mode="delete"/>
                    <params>
                        <value>
                            <object code="lines" module="core" objectdef="script_param"/>
                        </value>
                        <value>
                            <object code="row" module="core" objectdef="script_param"/>
                        </value>
                        <value>
                            <object code="nameToCol" module="core" objectdef="script_param"/>
                        </value>
                    </params>            
                    <script_code>    
                        <value><![CDATA[
//lines,row,nameToCol
var line = lines[row];
var colBid = nameToCol["Bid"];
var colCmp = nameToCol["Име на фирма"];
var colBul = nameToCol["Булстат"];
if (line[colCmp] == null || line[colCmp].trim() == "")
	return false;
try {
    line[colBid].castToExactNumber();    
} catch(e) {
    return false;
}
return true;                        
         ]]></value>
     </script_code>
 </object>
 
 <object code="gen.bg2lat" objectdef="vscript" module="core" >
     <params>
         <value>
             <object code="str" module="core" objectdef="script_param"/>
         </value>
     </params>            
     <script_code>    
         <value><![CDATA[
var arr=[];
var ll = str.length();
for (var i=0;i<ll;i++) {
	var c = str[i];
	function ns() {
		return (i < ll-1 && str[i+1] >= "а" && str[i+1] <= "я"); 
	}
	if (c == "Ж") {
		if (ns()) {
			arr.push("Zh");
		} else {
			arr.push("ZH");
		}
	} else if (c == "Ч") {
		if (ns()) {
			arr.push("Ch");
		} else {
			arr.push("CH");
		}
	} else if (c == "Ш") {
		if (ns()) {
			arr.push("Sh");
		} else {
			arr.push("SH");
		}
	} else if (c == "Щ") {
		if (ns()) {
			arr.push("St");
		} else {
			arr.push("ST");
		}
	} else if (c == "Ю") {
		if (ns()) {
			arr.push("Ju");
		} else {
			arr.push("JU");
		}
	// ----------------------		
	} else if (c == "ж") {
		arr.push("zh");
	} else if (c == "ч") {
		arr.push("ch");
	} else if (c == "ш") {
		arr.push("sh");
	} else if (c == "щ") {
		arr.push("st");
	} else if (c == "ю") {
		arr.push("ju");
	}
	//----------------------
	else {
		arr.push(c);
	}
}          
return arr.join("")

	.replace("Йо","Jo")
	.replace("ЙО","JO")
	.replace("йо","jo")
	.replace("йО","jO")
	
	.replace("Ьо","Jo")
	.replace("ЬО","JO")
	.replace("ьо","jo")
	.replace("ьО","jO")
	
	.replace("А","A")
	.replace("Б","B")
	.replace("В","V")
	.replace("Г","G")
	.replace("Д","D")
	.replace("Е","E")
	.replace("З","Z")
	.replace("И","I")
	.replace("К","K")
	.replace("Л","L")
	.replace("М","M")
	.replace("Н","N")
	.replace("О","O")
	.replace("П","P")
	.replace("Р","R")
	.replace("С","S")
	.replace("Т","T")
	.replace("У","U")
	.replace("Ф","F")
	.replace("Ц","C")
	.replace("Ъ","A")
	.replace("Я","Q")

	.replace("а","a")
	.replace("б","b")
	.replace("в","v")
	.replace("г","g")
	.replace("д","d")
	.replace("е","e")
	.replace("з","z")
	.replace("и","i")
	.replace("к","k")
	.replace("л","l")
	.replace("м","m")
	.replace("н","n")
	.replace("о","o")
	.replace("п","p")
	.replace("р","r")
	.replace("с","s")
	.replace("т","t")
	.replace("у","u")
	.replace("ф","f")
	.replace("ц","c")
	.replace("ъ","a")
	.replace("я","q")

	
	.replace("Й","I")
	.replace("й","i")
	.replace("Ь","I")
	.replace("ь","i");
         ]]></value>
     </script_code>
 </object>
 
 <object code="availOpg" objectdef="vscript" module="core" >
     <params>
         <value>
             <object code="object" module="core" objectdef="script_param"/>
         </value>
     </params>            
     <script_code>    
         <value><![CDATA[
var rest = object.quantity;
var params = new M();
var sel = db.most.opg.SELECT("discount_mode.code = 'R' AND (valid_from IS NULL OR valid_from <= :OFCD) AND (valid_to IS NULL OR valid_to >= :OFCD) AND entries.article.id = :PRID ORDER BY COALESCE(valid_to,valid_from),id DESC");
sel["OFCD"]=object.official_date.date;
sel["PRID"]=object.article.id;
var arr=[];
var ok=false;
for (var e : sel.VALUE) 
{
	if (e == object.opg)
		continue;
	for (var a : e.entries) 
	{
		if (a.article == object.article) 
		{
			if (a.max_quantity == null) 
			{
				arr.push(e);
				break;
			} else {
				var q = a.max_quantity;
			 	var params = new M();
			 	params["ID"]=e.id;
			 	var sl = db.most.protocol_sale.VSQL_QUERY_SUM("SELECT quantity AS VAL WHERE opg = :ID",params);
				var used = 0;
				if (sl.next()) {
			        used=sl.getInt("RES");
			        if (used == null)
			        	used=0;
			    }
			    q-=used;
			    if (q < 0) {
					java.log.error("Inconsistent quantity state2 : "+a.toString());					    
			    } else if (rest <= q) {
					arr.push(e);
					break;
				} 	
			}
		}
	}
}
return arr;
         ]]></value>
     </script_code>
 </object>
 
 
  <object code="syncEDI" objectdef="vscript" module="core" >             
     <script_code>    
         <value><![CDATA[
/*system.vsp("<%vsp:include script=\"${web.lib.dir}/most/getstock.vr\" />");
system.vsp("<%vsp:include script=\"${web.lib.dir}/most/getopg.vr\" />");*/
java.log.error("OPLA : "+java.date.now());
         ]]></value>
     </script_code>
   </object>

<!-- 
	sumChartByCondition(obj,cond,from,to,width,height);
 -->

  <object code="sumChartByCondition" objectdef="vscript" module="core">             
     <script_code>    
         <value><![CDATA[
var obj = in[0];
var cond = in[1];
var from = in[2];
var to = in[3];
var width = in[4];
var height = in[5];

var min=null;
var max=null;
var params = new M();
params["OBJ"]=obj.id;
//---------------------------------------------------------------------------------------------------------------
if (from == null) {
	var sl=db.most.protocol_sale.VSQL_QUERY_MIN("SELECT official_date.\"date\" AS VAL WHERE "+cond,params);
	if (sl.next() && sl.getDate("RES") != null) { var t=sl.getDate("RES");if (from == null || t < from) from = t; }
	if (from == null)
		return null;
}
//---------------------------------------------------------------------------------------------------------------
if (to == null) {
	var sl=db.most.protocol_sale.VSQL_QUERY_MAX("SELECT official_date.\"date\" AS VAL WHERE "+cond,params);
	if (sl.next() && sl.getDate("RES") != null) { var t=sl.getDate("RES");if (to == null || t < to) to = t; }
	if (to == null)
		return null;
}
if (from >= to)
	return null;
//---------------------------------------------------------------------------------------------------------------
from=from.getTime();
to=to.getTime();

var chart = new java.reports.chart.XYAreaChart();
chart.has_legend = true;
chart.has_tooltips = false;
chart.has_x_axis=false;
chart.background_color="#FFFFFF";
chart.grid_x_color="#999999";
chart.grid_y_color="#999999";
chart.orientation="vertical";

var nsteps = java.math.ceil(width/16);
var a1=[];
var a2=[];
var a3=[];
var a4=[];
var xx=[];
for (var i=0;i<nsteps-1;i++) 
{
	var j = i+1;
	var t2 = java.date.fromMillis( java.math.floor(from+(to-from)*j.castToInexactNumber() / nsteps) + 1);
	params["FROM"]=java.date.fromMillis(from);	//t1;
	params["TO"]=t2;
	//----------------------------------------------------------------------------------------------------------------------------------
	var op = (i == nsteps-1) ? "<" : "<=";
	var tsold=0.0;
	var sl=db.most.protocol_sale.VSQL_QUERY_SUM("SELECT most_sale_total AS VAL WHERE "+cond+" AND official_date.\"date\" >= :FROM AND official_date.\"date\" "+op+" :TO",params);
	if (sl.next() && sl.getDouble("RES") != null) tsold=sl.getDouble("RES"); 

	var tcost=0.0;
	var sl=db.most.protocol_sale.VSQL_QUERY_SUM("SELECT total AS VAL WHERE "+cond+" AND official_date.\"date\" >= :FROM AND official_date.\"date\" "+op+" :TO",params);
	if (sl.next() && sl.getDouble("RES") != null) tcost=sl.getDouble("RES");
	//----------------------------------------------------------------------------------------------------------------------------------
	//a1.push(reported_stock);
	//a2.push(reported_sale);
	a3.push(tsold);
	a4.push(tcost);
	xx.push(i);
	//----------------------------------------------------------------------------------------------------------------------------------
}
//chart.data << ["HP Stock",xx,a1];
//chart.data << ["HP Sale",xx,a2];
chart.data << ["Cost",xx,a4];
chart.data << ["Sold",xx,a3];

return chart.export_to_url(width,height);

         ]]></value>
     </script_code>
 </object>


  <object code="calcCost" objectdef="vscript" module="core">             
     <script_code>    
         <value><![CDATA[
var obj = in[0];
var cond = in[1];
var from = in[2];
var to = in[3];

var params = new M();
params["OBJ"]=obj.id;
params["FROM"]=from;
params["TO"]=to;

var tcost=0.0;
var sl=db.most.protocol_sale.VSQL_QUERY_SUM("SELECT total AS VAL WHERE "+cond+" AND official_date.\"date\" >= :FROM AND official_date.\"date\" <= :TO",params);
if (sl.next() && sl.getDouble("RES") != null) tcost=sl.getDouble("RES");
return tcost;
         ]]></value>
     </script_code>
 </object>

  <object code="calcSale" objectdef="vscript" module="core">             
     <script_code>    
         <value><![CDATA[
var obj = in[0];
var cond = in[1];
var from = in[2];
var to = in[3];

var params = new M();
params["OBJ"]=obj.id;
params["FROM"]=from;
params["TO"]=to;

var tsell=0.0;
var sl=db.most.protocol_sale.VSQL_QUERY_SUM("SELECT most_sale_total AS VAL WHERE "+cond+" AND official_date.\"date\" >= :FROM AND official_date.\"date\" <= :TO",params);
if (sl.next() && sl.getDouble("RES") != null) tsell=sl.getDouble("RES");
return tsell;
         ]]></value>
     </script_code>
 </object>
 
  <object code="calcDelta" objectdef="vscript" module="core">             
     <script_code>    
         <value><![CDATA[
var obj = in[0];
var cond = in[1];
var from = in[2];
var to = in[3];

var params = new M();
params["OBJ"]=obj.id;
params["FROM"]=from;
params["TO"]=to;

var tsell=0.0;
var sl=db.most.protocol_sale.VSQL_QUERY_SUM("SELECT most_sale_total AS VAL WHERE "+cond+" AND official_date.\"date\" >= :FROM AND official_date.\"date\" <= :TO",params);
if (sl.next() && sl.getDouble("RES") != null) tsell=sl.getDouble("RES");

var tcost=0.0;
var sl=db.most.protocol_sale.VSQL_QUERY_SUM("SELECT total AS VAL WHERE "+cond+" AND official_date.\"date\" >= :FROM AND official_date.\"date\" <= :TO",params);
if (sl.next() && sl.getDouble("RES") != null) tcost=sl.getDouble("RES");

return tsell-tcost;
         ]]></value>
     </script_code>
 </object>
 
  <object code="calcCn" objectdef="vscript" module="core">             
     <script_code>    
         <value><![CDATA[
var obj = in[0];
var cond = in[1];
var from = in[2];
var to = in[3];

var params = new M();
params["OBJ"]=obj.id;
params["FROM"]=from;
params["TO"]=to;

var tnotes=0.0;
var sl=db.most.credit_note.VSQL_QUERY_SUM("SELECT DISTINCT id,total AS VAL WHERE "+cond+" AND quarter.months.dates.\"date\" >= :FROM AND quarter.months.dates.\"date\" <= :TO",params);
if (sl.next() && sl.getDouble("RES") != null) tnotes=sl.getDouble("RES");

return tnotes;
         ]]></value>
     </script_code>
 </object>
 
 
  <object code="filterArticles" objectdef="vscript" module="core">             
     <script_code>    
         <value><![CDATA[
var cond = in[0];
var from = in[1];
var to = in[2];

var tt = db.most.article.TEMP["filterArticles0"];
if (tt != null)
	return tt;
var params = new M();
params["FROM"]=from;
params["TO"]=to;

var tnotes=0.0;
var sl=db.most.article.SELECT("sales.official_date.\"date\" >= :FROM AND sales.official_date.\"date\" <= :TO AND id IN ("+cond+")");
sl["FROM"]=from;
sl["TO"]=to;

var arr=[];
for (var i=0;i<sl.size;i++) {
	var el = sl[i];
	arr.push(el.id);
}

var res = arr.join(",");
tt.reset(res);
return res;
         ]]></value>
     </script_code>
 </object>
 
  
  <object code="filterProductLines" objectdef="vscript" module="core">             
     <script_code>    
         <value><![CDATA[
var cond = in[0];
var from = in[1];
var to = in[2];

var tt = db.most.product_line.TEMP["filterProductLines0"];
if (tt != null)
	return tt;
var params = new M();
params["FROM"]=from;
params["TO"]=to;

var tnotes=0.0;
var sl=db.most.product_line.SELECT("articles.sales.official_date.\"date\" >= :FROM AND articles.sales.official_date.\"date\" <= :TO AND id IN ("+cond+")");
sl["FROM"]=from;
sl["TO"]=to;

var arr=[];
for (var i=0;i<sl.size;i++) {
	var el = sl[i];
	arr.push(el.id);
}

var res = arr.join(",");
tt.reset(res);
return res;
         ]]></value>
     </script_code>
 </object>
 
  <object code="filterProductGroups" objectdef="vscript" module="core">             
     <script_code>    
         <value><![CDATA[
var cond = in[0];
var from = in[1];
var to = in[2];

var tt = db.most.product_line.TEMP["filterProductGroups0"];
if (tt != null)
	return tt;
var params = new M();
params["FROM"]=from;
params["TO"]=to;

var tnotes=0.0;
var sl=db.most.product_group.SELECT("product_lines.articles.sales.official_date.\"date\" >= :FROM AND product_lines.articles.sales.official_date.\"date\" <= :TO AND id IN ("+cond+")");
sl["FROM"]=from;
sl["TO"]=to;

var arr=[];
for (var i=0;i<sl.size;i++) {
	var el = sl[i];
	arr.push(el.id);
}

var res = arr.join(",");
tt.reset(res);
return res;
         ]]></value>
     </script_code>
 </object>
 
 
  <object code="calcDeltaMinusCn" objectdef="vscript" module="core">             
     <script_code>    
         <value><![CDATA[
var obj = in[0];
var cond = in[1];
var from = in[2];
var to = in[3];

var params = new M();
params["OBJ"]=obj.id;
params["FROM"]=from;
params["TO"]=to;

var tsell=0.0;
var sl=db.most.protocol_sale.VSQL_QUERY_SUM("SELECT most_sale_total AS VAL WHERE "+cond+" AND official_date.\"date\" >= :FROM AND official_date.\"date\" <= :TO",params);
if (sl.next() && sl.getDouble("RES") != null) tsell=sl.getDouble("RES");

var tcost=0.0;
var sl=db.most.protocol_sale.VSQL_QUERY_SUM("SELECT total AS VAL WHERE "+cond+" AND official_date.\"date\" >= :FROM AND official_date.\"date\" <= :TO",params);
if (sl.next() && sl.getDouble("RES") != null) tcost=sl.getDouble("RES");

var delta = tsell-tcost;

var tnotes=0.0;
var sl=db.most.credit_note.VSQL_QUERY_SUM("SELECT DISTINCT id,total AS VAL WHERE "+cond+" AND quarter.months.dates.\"date\" >= :FROM AND quarter.months.dates.\"date\" <= :TO",params);
if (sl.next() && sl.getDouble("RES") != null) tnotes=sl.getDouble("RES");

return delta-tnotes;
         ]]></value>
     </script_code>
 </object>
 
 

  <object code="calcZeroPrice" objectdef="vscript" module="core">             
     <script_code>    
         <value><![CDATA[
var obj = in[0];
var cond = in[1];
var params = new M();
params["OBJ"]=obj.id;
//---------------------------------------------------------------------------------------------------------------
var sl=db.most.article.VSQL_QUERY_SUM("SELECT SUM(total) AS VAL FROM (SELECT DISTINCT id AS xid, available_real * dealer_price AS total WHERE "+cond+") GROUP BY xid",params);
if (sl.next() && sl.getDouble("RES") != null) 
	return sl.getDouble("RES");
return 0.0;
         ]]></value>
     </script_code>
 </object>
 
 <object code="calcTotalAvail" objectdef="vscript" module="core">             
     <script_code>    
         <value><![CDATA[
var obj = in[0];
var cond = in[1];
var params = new M();
params["OBJ"]=obj.id;
//---------------------------------------------------------------------------------------------------------------
var sl=db.most.article.VSQL_QUERY_SUM("SELECT SUM(quantity) AS VAL FROM (SELECT DISTINCT id AS xid, quantity AS quantity WHERE "+cond+") GROUP BY xid",params);
if (sl.next() && sl.getDouble("RES") != null) 
	return sl.getDouble("RES");
return 0.0;
         ]]></value>
     </script_code>
 </object>


 
 <object code="updateGUIActiveDate" objectdef="vscript" module="core">             
     <script_code>    
         <value><![CDATA[
var rti_root= in[0];
db.addExecutionAfterCommit(function(rti_root) 
{
	while (rti_root.root_parent != null && rti_root.root_parent != null)
		rti_root=rti_root.root_parent;
	
	var cdate = db.most.protocol_date.SELECT("is_active=1");
	cdate.is_cached=false;
	if (cdate.size != 1)
		return;
	var dd = cdate[0];	
	
	var cxd = rti_root.context_data["gui_act_date"];
	if (cxd == null) 
	{
		var wdg = new db.web.script_execution();
		wdg.script=db.core.embedded_execution.INSTANCES["most:change_date"];
	
		wdg.parent = rti_root;
		wdg.pos_top=7;
		wdg.pos_right=200;
		wdg.font=FONTS["default_bold_20"];
	
		cxd = new db.event.object_context_data_entry();
		cxd.object=wdg;
		cxd.reference_owner=rti_root;
		cxd.code="gui_act_date";
		rti_root.context_data<<cxd;
	}
	var wdg = cxd.object;
	wdg.label=FORMAT_DATE(dd.date);
},rti_root);
         ]]></value>
     </script_code>
 </object>

 <!--  EMBEDDED EXECUTIONS -->
 <object code="most:change_date" module="core" objectdef="embedded_execution_script">
     <name>
         <value>
             <en-US>Change active date</en-US>
         </value>
         <value>
             <de-DE>Aktives Datum setzen</de-DE>
         </value>
         <value>
             <bg-BG>Промяна активна дата</bg-BG>
         </value>
     </name>
     <is_single_button><value>true</value></is_single_button>
     <is_direct><value>true</value></is_direct>
     <is_auto_close_result><value>true</value></is_auto_close_result>
     <is_gui><value>true</value></is_gui>
     <icon>
         <value>
           <object code="/images/objectdefs/icons/color/128/projects-project.png" module="documents" objectdef="icon"></object>
         </value>
     </icon>
     <param_objectdef>
        <value>
          <object code="script_execution_context_set_active_date" cond="module.code='most'" objectdef="objectdef" module="core" mode="update"/>
        </value>
     </param_objectdef>                   
     <execute>
         <value>
             <object code="most:embedded_execution.execute" module="core" objectdef="vscript">
                 <params>
                     <value>
                         <object code="objects" module="core" objectdef="script_param"></object>
                     </value>
                     <value>
                         <object code="param" module="core" objectdef="script_param"></object>
                     </value>
                     <value>
                         <object code="rti_root" module="core" objectdef="script_param"></object>
                     </value>
                 </params>
                 <script_code>
                     <value><![CDATA[
param.date.is_active=true;        
SCRIPTS["updateGUIActiveDate"](rti_root);             
                ]]></value>
                </script_code>
            </object>
        </value>
    </execute>
 </object>    
 
 
 <object code="importSalesFileDirect" objectdef="vscript" module="core">             
     <name>
         <value>
             <en-US>Import sales</en-US>
         </value>
         <value>
             <de-DE>Verkauf importieren</de-DE>
         </value>
         <value>
             <bg-BG>Импорт продажби</bg-BG>
         </value>
     </name>
     <icon>
         <value>
           <object code="/images/objectdefs/icons/color/128/spaces-warehouse.png" module="documents" objectdef="icon"></object>
         </value>
     </icon>
     <params>
         <value>
             <object code="objects" module="core" objectdef="script_param"></object>
         </value>
         <value>
             <object code="param" module="core" objectdef="script_param"></object>
         </value>
         <value>
             <object code="rti_root" module="core" objectdef="script_param"></object>
         </value>
     </params>
     <script_code>    
         <value><![CDATA[
var file = objects[0];

var hres="";

function info(msg) { hres+=STR2HTML(msg+"\n"); }
function warn(msg) { hres+="<b>"+STR2HTML(msg+"\n")+"</b>"; }
function error(msg) { hres+="<b style='color:#FF3030'>"+STR2HTML(msg+"\n")+"</b>"; }

var ext = file.getExtension().toUpperCase();
if (ext == "XLS" || ext == "XLSX") {
	var res = core.data_exchange.get_xls_xml(file,db.core.data_import_xls.INSTANCES["most:sales"],info,warn,error);
	core.script_import.importFile(res,true,info,warn,error,true);
	web.win.warning(rti_root,hres);
}
file.delete();
         ]]></value>
     </script_code>
 </object>

 <object code="calcSaleSerials" objectdef="vscript" module="core">             
     <script_code>    
         <value><![CDATA[
var obj = in[0];
var arr=[];

if (obj.stock != null && obj.quantity != null && obj.quantity > 0) 
{
	var used=0;
	var params=new M();
	params["ID"]=obj.id;
	params["STK"]=obj.stock.id;
	var sl=db.most.protocol_sale.VSQL_QUERY_SUM("SELECT quantity AS VAL WHERE stock = :STK AND id < :ID",params);
	if (sl.next() && sl.getInt("RES") != null) used=sl.getInt("RES");
	for (var i=0;i<obj.quantity;i++) 
	{
		var serial = obj.stock.serial_ids[used];
		if (serial == null)
			break;
		used++;
		arr.push(serial);		
	}
}
return arr.join(",");
         ]]></value>
     </script_code>
 </object>
 

  
</objects>
</import>