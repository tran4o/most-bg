
var DEBUG = true;
var pcnt = 0; var pnew = 0;

function prod_find_or_create(code, name, product_line, description, vendor) {
    //trim code
    if ( code.indexOf("#") > 0 ) {
        code = code.substring(0, code.indexOf("#"));
    }

    var artobj = db.most.article.INSTANCES[code];

    if (artobj != null) {
        if (DEBUG) console.log("product " + code + " found. vendor is " + vendor);
    } else {
        if (DEBUG) console.log("product " + code + " not found. new instance. vendor is " + vendor);
        artobj = new db.most.article();
        pnew++;
    }

    vendor = db.contacts.vendor.INSTANCES[vendor];
    if ( vendor == null ) {
        vendor = db.contacts.vendor.INSTANCES["HPOLD"];
    }

    artobj.code = code;
    artobj.name["en-US"] = name;

    if (product_line) {
        var plobj = db.most.product_line.INSTANCES[product_line];
        if (plobj != null) {
            if (DEBUG) console.log("product line " + product_line + " found");
        } else {
            if (DEBUG) console.log("product line " + code + " not found. new instance");
            plobj = new db.most.product_line();
            plobj.code = product_line;
        }
        artobj.product_line = plobj;
    }

    artobj.description["en-US"] = description;
    artobj.vendor = vendor;
    artobj.commit();

    pcnt++;
    return artobj;
}

// ------------------------------------------------------------

function connect_source_db() {
    var map = new M();

    map["user"] = db.prefs["most.import.sql.user"];
    map["password"] = db.prefs["most.import.sql.pass"];
    var con = new java.db.Connection(
        "mssql_2008",
        "jdbc:sqlserver://" + db.prefs["most.import.sql.host"] + ";database=" + db.prefs["most.import.sql.dbname"],
        map);

    return con;
}

// main // -----------------------------------------------------------

var con = connect_source_db();
console.log("fetching missing articles list... ");

var acol = db.most.article.SELECT("product_line.code = :PL or product_line.code is null");
acol["PL"] = "OTHERS";
var artlist = [];

con.execute("delete from tpn");

for (var a: acol) {
    artlist.push("'" + a.code + "'");
    if (artlist.length %128 == 0) {
        console.log("found " + artlist.length);
    }
    con.execute("insert into tpn values('" + a.code + "')");
}

console.log("our DB has " + artlist.size() + " elements without PL");

var q = [
" SELECT DISTINCT nout.product_base_no,",
" coalesce(og.product_line, np.product_line, pp.product_line) AS pl",
" FROM tpn as nout",
" outer apply",
" (SELECT top 1 ProductLine as product_line",
"   FROM opgdet",
"   WHERE dbo.ven2clean(opgdet.VendorPartNo) = nout.product_base_no and ",
"   ProductLine is not null) og",
" ",
" outer apply",
" (SELECT top 1 pin.product_line",
"   FROM NancyProducts pin",
"   WHERE pin.product_base_no = nout.product_base_no and pin.product_line is not null) np",
" ",
" outer apply",
" (SELECT top 1 pin.prod_line as product_line",
"   FROM products pin",
"   WHERE dbo.ven2clean(pin.product_base_no) = nout.product_base_no and pin.prod_line is not null) pp"
].join(" ");

var res = con.select(q);

console.log("executing...");

while(res.next()) {
    pcnt++;
    if ( pcnt % 128 == 0 ) {
        console.log(pcnt);
    }
    var artobj = db.most.article.INSTANCES[res.getString("product_base_no")];
    var plobj = db.most.product_line.INSTANCES[res.getString("pl")];

    var plstr = res.getString("pl");

    if (plobj == null && (plstr != "(null)") && (plstr != "") && plstr != null) {
        console.log("pl " + plstr + " not found... creating");
        plobj = new db.most.product_line();
        plobj.code = res.getString("pl");
        plobj.commit();
    }

    if ( plstr != "(null)" && plstr != "" && plstr != null) {
	    artobj.product_line = plobj;
	    artobj.commit();
    } else {
        artobj.product_line = db.most.product_line.INSTANCES["OTHERS"];
    }
}

console.log("intercepted " + pcnt + " products, and " + pnew + " of them are new. good work !");

